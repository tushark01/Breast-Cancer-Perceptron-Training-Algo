# -*- coding: utf-8 -*-
"""Untitled43.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fueikH3e63exk2DeZ16jEu_aGuXEBN8b
"""

import sklearn.datasets
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.metrics.pairwise import cosine_similarity

breast_cancer= sklearn.datasets.load_breast_cancer()
feature= pd.DataFrame(breast_cancer.data, columns= breast_cancer.feature_names)
lable= breast_cancer.target

feature

feature.describe()

feature.info()

feature.shape

from sklearn.preprocessing import MinMaxScaler
mnscaler= MinMaxScaler()

feature= mnscaler.fit_transform(feature)

feature

lr=1
w= np.ones(feature.shape[1])

b=0

accuracy= {}
max_accuracy= 0
wt_matrix= []

wt_matrix.append(w)
epoches= 100
sim= []

w

w.shape

for j in range(1,epoches):
  for i in range(feature.shape[0]):
    yin= np.dot(w,feature[i])

    if yin>=b:
      y_pred=1

    else:
      y_pred=0

    if lable[i]== 1 and y_pred== 0:
      w= w+lr * feature[i]

    elif lable[i] == 0 and y_pred ==1:
      w= w-lr * feature[i]
  wt_matrix.append(w)
  cos_sim= cosine_similarity(wt_matrix[j-1].reshape(1,-1),wt_matrix[j].reshape(1,-1))
  sim.append(cos_sim)

h_matching= sim.index(max(sim))
final_weight= wt_matrix[h_matching]

final_weight